name: Markdown Blog - Backend - release
on:
  push:
    branches:
      - master
    paths:
      - 'be/**'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  backend-release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.2'
      - name: Test
        run: |
          cd be
          go mod tidy
          make clean
          make test
      - name: Lint (golangci-lint)
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60
          working-directory: be
          args: --timeout=10m
      - name: Release Please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
      - run: |
          cd be
          make dist
        name: Build
      - run: |
          cd be
          zip -j be.zip dist/markdown-blog-server
          gh release upload ${{ steps.release.outputs.be--tag_name }} be.zip
        env:
          GH_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }}
        name: Upload release package
        if: ${{ steps.release.outputs['be--release_created'] }}
      - run: |
          cd be
          docker build -f docker/Dockerfile -t ghcr.io/rikotsev/markdown-blog-be:latest .
          docker push ghcr.io/rikotsev/markdown-blog-be:latest
        env:
          GH_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }}
        name: Bake Latest
      - run: |
          cd be
          docker build -f docker/Dockerfile -t ghcr.io/rikotsev/markdown-blog-be:${{ steps.release.outputs.be--tag_name }} .
          docker push ghcr.io/rikotsev/markdown-blog-be:${{ steps.release.outputs.be--tag_name }}
        env:
          GH_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }}
        name: Bake Release
        if: ${{ steps.release.outputs['be--release_created'] }}